<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0216.1925                               -->
<workbook source-build='10.2.0 (10200.17.0216.1925)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.2'>
      <aliases enabled='yes' />
      <column caption='sales 百分比参数' datatype='real' default-format='p0%' name='[参数 1]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
        <range granularity='0.10000000000000001' max='1.0' min='0.0' />
      </column>
    </datasource>
    <datasource caption='Sample-CoffeeChain 数据提取' inline='true' name='federated.0yp4cic0mu8vry17z6p740ll9wu8' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample-CoffeeChain' name='dataengine.120674b0svtbj3104bf0a1cvd5gq'>
            <connection class='dataengine' dbname='C:/Users/PC/Desktop/数据分析/Tableau Learn/tableau-learn/TableauTutorial-On-AnalyticsVidhya-master/Sample-CoffeeChain.tde' password='' />
          </named-connection>
        </named-connections>
        <relation connection='dataengine.120674b0svtbj3104bf0a1cvd5gq' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Area Code (Location)</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Area Code (Location)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Area Code (Location)</remote-alias>
            <ordinal>0</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>156</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>2473517.0</statistic>
              <statistic aggregation='Avg' datatype='real'>582.27801318267416</statistic>
              <statistic aggregation='Min' datatype='integer'>203</statistic>
              <statistic aggregation='Max' datatype='integer'>985</statistic>
              <statistic aggregation='Stdev' datatype='real'>221.14030987874753</statistic>
              <statistic aggregation='StdevP' datatype='real'>221.11427959087223</statistic>
              <statistic aggregation='Var' datatype='real'>48903.036653268486</statistic>
              <statistic aggregation='VarP' datatype='real'>48891.524638990413</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>1647965761.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>1</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>156</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>2473517.0</statistic>
              <statistic aggregation='Avg' datatype='real'>582.27801318267416</statistic>
              <statistic aggregation='Min' datatype='integer'>203</statistic>
              <statistic aggregation='Max' datatype='integer'>985</statistic>
              <statistic aggregation='Stdev' datatype='real'>221.14030987874753</statistic>
              <statistic aggregation='StdevP' datatype='real'>221.11427959087223</statistic>
              <statistic aggregation='Var' datatype='real'>48903.036653268486</statistic>
              <statistic aggregation='VarP' datatype='real'>48891.524638990413</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>1647965761.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget COGS</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Budget COGS]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Budget COGS</remote-alias>
            <ordinal>2</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>41</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>317880.0</statistic>
              <statistic aggregation='Avg' datatype='real'>74.830508474576277</statistic>
              <statistic aggregation='Min' datatype='integer'>0</statistic>
              <statistic aggregation='Max' datatype='integer'>450</statistic>
              <statistic aggregation='Stdev' datatype='real'>66.238145117727171</statistic>
              <statistic aggregation='StdevP' datatype='real'>66.23034826700065</statistic>
              <statistic aggregation='Var' datatype='real'>4387.4918686370838</statistic>
              <statistic aggregation='VarP' datatype='real'>4386.4590315681953</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>42420800.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Margin</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Budget Margin]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Budget Margin</remote-alias>
            <ordinal>3</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>76</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>428280.0</statistic>
              <statistic aggregation='Avg' datatype='real'>100.81920903954803</statistic>
              <statistic aggregation='Min' datatype='integer'>-210</statistic>
              <statistic aggregation='Max' datatype='integer'>690</statistic>
              <statistic aggregation='Stdev' datatype='real'>92.602725085835914</statistic>
              <statistic aggregation='StdevP' datatype='real'>92.591824876853906</statistic>
              <statistic aggregation='Var' datatype='real'>8575.2646933229043</statistic>
              <statistic aggregation='VarP' datatype='real'>8573.2460340259822</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>79598000.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Profit</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Budget Profit]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Budget Profit</remote-alias>
            <ordinal>4</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>76</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>258760.0</statistic>
              <statistic aggregation='Avg' datatype='real'>60.913370998116761</statistic>
              <statistic aggregation='Min' datatype='integer'>-320</statistic>
              <statistic aggregation='Max' datatype='integer'>560</statistic>
              <statistic aggregation='Stdev' datatype='real'>79.546122584369328</statistic>
              <statistic aggregation='StdevP' datatype='real'>79.536759259919933</statistic>
              <statistic aggregation='Var' datatype='real'>6327.5856182075131</statistic>
              <statistic aggregation='VarP' datatype='real'>6326.0960735704584</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>42635200.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Sales</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Budget Sales]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Budget Sales</remote-alias>
            <ordinal>5</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>89</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>746160.0</statistic>
              <statistic aggregation='Avg' datatype='real'>175.64971751412429</statistic>
              <statistic aggregation='Min' datatype='integer'>0</statistic>
              <statistic aggregation='Max' datatype='integer'>1140</statistic>
              <statistic aggregation='Stdev' datatype='real'>148.89152216672647</statistic>
              <statistic aggregation='StdevP' datatype='real'>148.87399623856655</statistic>
              <statistic aggregation='Var' datatype='real'>22168.685373124797</statistic>
              <statistic aggregation='VarP' datatype='real'>22163.466756040729</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>225213200.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cogs</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Cogs]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Cogs</remote-alias>
            <ordinal>6</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>173</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>358672.0</statistic>
              <statistic aggregation='Avg' datatype='real'>84.433145009416194</statistic>
              <statistic aggregation='Min' datatype='integer'>0</statistic>
              <statistic aggregation='Max' datatype='integer'>364</statistic>
              <statistic aggregation='Stdev' datatype='real'>67.249769048357152</statistic>
              <statistic aggregation='StdevP' datatype='real'>67.241853120009054</statistic>
              <statistic aggregation='Var' datatype='real'>4522.531437057376</statistic>
              <statistic aggregation='VarP' datatype='real'>4521.4668110128705</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>49490996.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>7</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>24</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='datetime'>#2010-01-01 00:00:00#</statistic>
              <statistic aggregation='Max' datatype='datetime'>#2011-12-01 00:00:00#</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='Median' datatype='datetime'>#2011-01-01 00:00:00#</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inventory</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Inventory]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Inventory</remote-alias>
            <ordinal>8</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>610</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>3183372.0</statistic>
              <statistic aggregation='Avg' datatype='real'>749.38135593220341</statistic>
              <statistic aggregation='Min' datatype='integer'>-3534</statistic>
              <statistic aggregation='Max' datatype='integer'>8252</statistic>
              <statistic aggregation='Stdev' datatype='real'>661.03189559147643</statistic>
              <statistic aggregation='StdevP' datatype='real'>660.9540859395571</statistic>
              <statistic aggregation='Var' datatype='real'>436963.16698926059</statistic>
              <statistic aggregation='VarP' datatype='real'>436860.30372019537</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>4241342196.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Margin</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Margin]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Margin</remote-alias>
            <ordinal>9</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>290</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>443038.0</statistic>
              <statistic aggregation='Avg' datatype='real'>104.29331450094162</statistic>
              <statistic aggregation='Min' datatype='integer'>-302</statistic>
              <statistic aggregation='Max' datatype='integer'>613</statistic>
              <statistic aggregation='Stdev' datatype='real'>94.3425224628363</statistic>
              <statistic aggregation='StdevP' datatype='real'>94.33141746339075</statistic>
              <statistic aggregation='Var' datatype='real'>8900.5115446507716</statistic>
              <statistic aggregation='VarP' datatype='real'>8898.4163206525009</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>84006374.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market Size</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Market Size]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Market Size</remote-alias>
            <ordinal>10</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Major Market&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Small Market&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>11</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Central&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Marketing]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Marketing</remote-alias>
            <ordinal>12</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>102</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>132474.0</statistic>
              <statistic aggregation='Avg' datatype='real'>31.185028248587571</statistic>
              <statistic aggregation='Min' datatype='integer'>0</statistic>
              <statistic aggregation='Max' datatype='integer'>156</statistic>
              <statistic aggregation='Stdev' datatype='real'>27.023263782299757</statistic>
              <statistic aggregation='StdevP' datatype='real'>27.020082890783552</statistic>
              <statistic aggregation='Var' datatype='real'>730.25678544775371</statistic>
              <statistic aggregation='VarP' datatype='real'>730.08487942481406</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>7232606.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>4248.0</statistic>
              <statistic aggregation='Avg' datatype='real'>1.0</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
              <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
              <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
              <statistic aggregation='Var' datatype='real'>0.0</statistic>
              <statistic aggregation='VarP' datatype='real'>0.0</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='Median' datatype='integer'>1</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>4248.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Id</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Product Id]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Id</remote-alias>
            <ordinal>14</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>13</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>29256.0</statistic>
              <statistic aggregation='Avg' datatype='real'>6.8870056497175138</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>13</statistic>
              <statistic aggregation='Stdev' datatype='real'>3.6640716334723158</statistic>
              <statistic aggregation='StdevP' datatype='real'>3.6636403378868687</statistic>
              <statistic aggregation='Var' datatype='real'>13.425420935216485</statistic>
              <statistic aggregation='VarP' datatype='real'>13.42226052539181</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>258504.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Type]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Type</remote-alias>
            <ordinal>15</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Coffee&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Tea&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId (Product)</remote-name>
            <remote-type>16</remote-type>
            <local-name>[ProductId (Product)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ProductId (Product)</remote-alias>
            <ordinal>16</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>13</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>29256.0</statistic>
              <statistic aggregation='Avg' datatype='real'>6.8870056497175138</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>13</statistic>
              <statistic aggregation='Stdev' datatype='real'>3.6640716334723158</statistic>
              <statistic aggregation='StdevP' datatype='real'>3.6636403378868687</statistic>
              <statistic aggregation='Var' datatype='real'>13.425420935216485</statistic>
              <statistic aggregation='VarP' datatype='real'>13.42226052539181</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>258504.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>17</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>13</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Amaretto&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Regular Espresso&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>18</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>466</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>259543.0</statistic>
              <statistic aggregation='Avg' datatype='real'>61.097693032015066</statistic>
              <statistic aggregation='Min' datatype='integer'>-638</statistic>
              <statistic aggregation='Max' datatype='integer'>778</statistic>
              <statistic aggregation='Stdev' datatype='real'>101.70854593319349</statistic>
              <statistic aggregation='StdevP' datatype='real'>101.69657388372194</statistic>
              <statistic aggregation='Var' datatype='real'>10344.628315844529</statistic>
              <statistic aggregation='VarP' datatype='real'>10342.193139687315</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>59791115.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>19</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>432</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>819811.0</statistic>
              <statistic aggregation='Avg' datatype='real'>192.98752354048963</statistic>
              <statistic aggregation='Min' datatype='integer'>17</statistic>
              <statistic aggregation='Max' datatype='integer'>912</statistic>
              <statistic aggregation='Stdev' datatype='real'>151.13312713911549</statistic>
              <statistic aggregation='StdevP' datatype='real'>151.11533735303314</statistic>
              <statistic aggregation='Var' datatype='real'>22841.222118848043</statistic>
              <statistic aggregation='VarP' datatype='real'>22835.845183321009</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>255219965.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>20</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>20</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;California&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Wisconsin&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenses</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Total Expenses]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Total Expenses</remote-alias>
            <ordinal>21</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>156</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>229662.0</statistic>
              <statistic aggregation='Avg' datatype='real'>54.063559322033896</statistic>
              <statistic aggregation='Min' datatype='integer'>10</statistic>
              <statistic aggregation='Max' datatype='integer'>190</statistic>
              <statistic aggregation='Stdev' datatype='real'>32.352597534354672</statistic>
              <statistic aggregation='StdevP' datatype='real'>32.348789330288234</statistic>
              <statistic aggregation='Var' datatype='real'>1046.6905672199318</statistic>
              <statistic aggregation='VarP' datatype='real'>1046.4441711353697</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>16861640.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>22</ordinal>
            <family>Sample-CoffeeChain.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Decaf&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Regular&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>4248</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' default-format='*000' name='[Area Code (Location)]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column datatype='integer' default-format='*000' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.402806' measure-ordering='alphabetic' measure-percentage='0.597194' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Orders+ (Sample-Superstore)' inline='true' name='federated.0go4wrl03un6fz1df3aqv1kd023m' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample-Superstore' name='excel-direct.0nwd32u09sb2xu1bdokhf0l5et99'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/PC/Desktop/数据分析/Tableau Learn/tableau-learn/TableauTutorial-On-AnalyticsVidhya-master/Sample-Superstore.xls' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Region]' />
              <expression op='[People].[Region]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Orders].[Order ID]' />
                <expression op='[Returns].[Order ID]' />
              </expression>
            </clause>
            <relation connection='excel-direct.0nwd32u09sb2xu1bdokhf0l5et99' name='Orders' table='[Orders$]' type='table'>
              <columns gridOrigin='A1:U9998:no:A1:U9998:1' lost='2' outcome='9' processed='79952'>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
            <relation connection='excel-direct.0nwd32u09sb2xu1bdokhf0l5et99' name='Returns' table='[Returns$]' type='table'>
              <columns gridOrigin='A1:D297:no:A1:D297:1' lost='0' outcome='1' processed='296'>
                <column datatype='integer' name='Number of Records' ordinal='0' />
                <column datatype='string' name='Returned' ordinal='1' />
                <column datatype='string' name='Order ID' ordinal='2' />
                <column datatype='string' name='Updated Order Returns' ordinal='3' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0nwd32u09sb2xu1bdokhf0l5et99' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Number of Records]' value='[Returns].[Number of Records]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
          <map key='[Updated Order Returns]' value='[Returns].[Updated Order Returns]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9998:no:A1:U9998:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>2</attribute>
              <attribute datatype='integer' name='outcome'>9</attribute>
              <attribute datatype='integer' name='processed'>79952</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Updated Order Returns</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Updated Order Returns]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Updated Order Returns</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D297:no:A1:D297:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>296</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank' datatype='integer' name='[Calculation_1539386653611855872]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='number of records' datatype='integer' name='[Calculation_1539386653625344003]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Order ID])' />
      </column>
      <column caption='negProfit' datatype='real' name='[Calculation_1539386653628313604]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-[Profit]' />
      </column>
      <column caption='sales 百分比' datatype='real' name='[Calculation_1544453204264280064]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Sales]))/TOTAL(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% sub-category' datatype='real' name='[Calculation_1544453204266442754]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()/SIZE()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='横轴参考线' datatype='real' name='[Calculation_1544453204266676227]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1544453204264280064]&lt;=[Parameters].[参数 1] THEN [Calculation_1544453204266442754]&#13;&#10;ELSE NULL END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[计算 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Profit]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[计算 2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Profit]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column-instance column='[Profit]' derivation='Sum' name='[cum:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[cum:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[Order Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcrk:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1539386653611855872]' derivation='User' name='[usr:Calculation_1539386653611855872:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[Segment]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1544453204264280064]' derivation='User' name='[usr:Calculation_1544453204264280064:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[Sub-Category]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1544453204264280064]' derivation='User' name='[usr:Calculation_1544453204264280064:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[计算 1]' derivation='User' name='[usr:计算 1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[计算 2]' derivation='User' name='[usr:计算 2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[win:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[win:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.257206' measure-ordering='alphabetic' measure-percentage='0.618625' parameter-percentage='0.124169' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Segment:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[cum:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Segment:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[pcto:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:计算 1:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:计算 2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[win:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:Calculation_1544453204264280064:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:Calculation_1544453204264280064:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[cum:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[pcdf:sum:Sales:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[pcdf:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[pcrk:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[pcto:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:Calculation_1539386653611855872:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[win:sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='sales 百分比参数' datatype='real' default-format='p0%' name='[参数 1]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
          <range granularity='0.10000000000000001' max='1.0' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sheet1 (iris-test)' inline='true' name='federated.0xqhu1q0k96r5e12irs8k1ldixiw' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='iris-test' name='excel-direct.1orsgft0kqh1t5130z4ci1tgl6y2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/PC/Desktop/数据分析/Tableau Learn/tableau-learn/TableauTutorial-On-AnalyticsVidhya-master/iris-test.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1orsgft0kqh1t5130z4ci1tgl6y2' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E151:no:A1:E151:0' header='yes' outcome='6'>
            <column datatype='real' name='Sepal Length' ordinal='0' />
            <column datatype='real' name='Sepal Width' ordinal='1' />
            <column datatype='real' name='Petal Length' ordinal='2' />
            <column datatype='real' name='Petal Width' ordinal='3' />
            <column datatype='string' name='Class' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Sepal Length</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sepal Length]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sepal Length</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sepal Width</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sepal Width]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sepal Width</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Petal Length</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Petal Length]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Petal Length</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Petal Width</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Petal Width]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Petal Width</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Class</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Class]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Class</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E151:no:A1:E151:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Cluster' datatype='integer' name='[Calculation_1414974715677425665]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_INT(&#13;&#10;&apos;result = kmeans(data.frame(.arg1,.arg2,.arg3,.arg4),3);&#13;&#10;result$cluster;&apos;,&#13;&#10;SUM([Petal Length]),SUM([Petal Width]),SUM([Sepal Length]),SUM([Sepal Width])&#13;&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.288248' measure-ordering='alphabetic' measure-percentage='0.470067' parameter-percentage='0.241685' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='突出显示 1 (已生成)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='凹凸图' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Segment' />
        <param name='target' value='凹凸图' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cluster with R'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (iris-test)' name='federated.0xqhu1q0k96r5e12irs8k1ldixiw' />
          </datasources>
          <datasource-dependencies datasource='federated.0xqhu1q0k96r5e12irs8k1ldixiw'>
            <column caption='Cluster' datatype='integer' name='[Calculation_1414974715677425665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_INT(&#13;&#10;&apos;result = kmeans(data.frame(.arg1,.arg2,.arg3,.arg4),3);&#13;&#10;result$cluster;&apos;,&#13;&#10;SUM([Petal Length]),SUM([Petal Width]),SUM([Sepal Length]),SUM([Sepal Width])&#13;&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Petal Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Petal Width]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sepal Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sepal Width]' role='measure' type='quantitative' />
            <column-instance column='[Petal Length]' derivation='Sum' name='[sum:Petal Length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Petal Width]' derivation='Sum' name='[sum:Petal Width:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sepal Length]' derivation='Sum' name='[sum:Sepal Length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sepal Width]' derivation='Sum' name='[sum:Sepal Width:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1414974715677425665]' derivation='User' name='[usr:Calculation_1414974715677425665:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xqhu1q0k96r5e12irs8k1ldixiw].[usr:Calculation_1414974715677425665:qk]' num-steps='3' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xqhu1q0k96r5e12irs8k1ldixiw].[usr:Calculation_1414974715677425665:qk]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[federated.0xqhu1q0k96r5e12irs8k1ldixiw].[sum:Petal Length:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xqhu1q0k96r5e12irs8k1ldixiw].[usr:Calculation_1414974715677425665:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[federated.0xqhu1q0k96r5e12irs8k1ldixiw].[sum:Petal Width:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xqhu1q0k96r5e12irs8k1ldixiw].[usr:Calculation_1414974715677425665:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0xqhu1q0k96r5e12irs8k1ldixiw].[sum:Sepal Length:qk] + [federated.0xqhu1q0k96r5e12irs8k1ldixiw].[sum:Sepal Width:qk])</rows>
        <cols>([federated.0xqhu1q0k96r5e12irs8k1ldixiw].[sum:Petal Length:qk] + [federated.0xqhu1q0k96r5e12irs8k1ldixiw].[sum:Petal Width:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Cluster without R'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (iris-test)' name='federated.0xqhu1q0k96r5e12irs8k1ldixiw' />
          </datasources>
          <datasource-dependencies datasource='federated.0xqhu1q0k96r5e12irs8k1ldixiw'>
            <column datatype='string' name='[Class]' role='dimension' type='nominal' />
            <column datatype='real' name='[Petal Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Petal Width]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sepal Length]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sepal Width]' role='measure' type='quantitative' />
            <column-instance column='[Class]' derivation='None' name='[none:Class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Petal Length]' derivation='Sum' name='[sum:Petal Length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Petal Width]' derivation='Sum' name='[sum:Petal Width:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sepal Length]' derivation='Sum' name='[sum:Sepal Length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sepal Width]' derivation='Sum' name='[sum:Sepal Width:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xqhu1q0k96r5e12irs8k1ldixiw].[none:Class:nk]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[federated.0xqhu1q0k96r5e12irs8k1ldixiw].[sum:Petal Length:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xqhu1q0k96r5e12irs8k1ldixiw].[none:Class:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.42779004573822021' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[federated.0xqhu1q0k96r5e12irs8k1ldixiw].[sum:Petal Width:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xqhu1q0k96r5e12irs8k1ldixiw].[none:Class:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.42779004573822021' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0xqhu1q0k96r5e12irs8k1ldixiw].[sum:Sepal Length:qk] + [federated.0xqhu1q0k96r5e12irs8k1ldixiw].[sum:Sepal Width:qk])</rows>
        <cols>([federated.0xqhu1q0k96r5e12irs8k1ldixiw].[sum:Petal Length:qk] + [federated.0xqhu1q0k96r5e12irs8k1ldixiw].[sum:Petal Width:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='凹凸图'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0go4wrl03un6fz1df3aqv1kd023m' />
          </datasources>
          <datasource-dependencies datasource='federated.0go4wrl03un6fz1df3aqv1kd023m'>
            <column caption='Rank' datatype='integer' name='[Calculation_1539386653611855872]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[cum:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1539386653611855872]' derivation='User' name='[usr:Calculation_1539386653611855872:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[Segment]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:Calculation_1539386653611855872:qk:3]' field-type='quantitative' major-show='false' minor-show='false' reverse='true' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:Calculation_1539386653611855872:qk:3]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:Calculation_1539386653611855872:qk:3]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Segment:nk]' />
              <text column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[cum:sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.77961325645446777' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:Calculation_1539386653611855872:qk:3]</rows>
        <cols>[federated.0go4wrl03un6fz1df3aqv1kd023m].[tmn:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='动态图'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0go4wrl03un6fz1df3aqv1kd023m' />
          </datasources>
          <datasource-dependencies datasource='federated.0go4wrl03un6fz1df3aqv1kd023m'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.0go4wrl03un6fz1df3aqv1kd023m].[yr:Order Date:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0go4wrl03un6fz1df3aqv1kd023m].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60370165109634399' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0go4wrl03un6fz1df3aqv1kd023m].[Multiple Values]</rows>
        <cols>[federated.0go4wrl03un6fz1df3aqv1kd023m].[tmn:Order Date:qk]</cols>
        <pages>
          <column>[federated.0go4wrl03un6fz1df3aqv1kd023m].[tmn:Order Date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' />
      </table>
    </worksheet>
    <worksheet name='工作表 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0go4wrl03un6fz1df3aqv1kd023m' />
          </datasources>
          <datasource-dependencies datasource='federated.0go4wrl03un6fz1df3aqv1kd023m'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Segment:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Sales:qk]</rows>
        <cols>[federated.0go4wrl03un6fz1df3aqv1kd023m].[tmn:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='工作表 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0go4wrl03un6fz1df3aqv1kd023m' />
          </datasources>
          <datasource-dependencies datasource='federated.0go4wrl03un6fz1df3aqv1kd023m'>
            <column caption='sales 百分比' datatype='real' name='[Calculation_1544453204264280064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Sales]))/TOTAL(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='% sub-category' datatype='real' name='[Calculation_1544453204266442754]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()/SIZE()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1544453204264280064]' derivation='User' name='[usr:Calculation_1544453204264280064:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[Sub-Category]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1544453204266442754]' derivation='User' name='[usr:Calculation_1544453204266442754:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <sort class='manual' column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Sub-Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Phones&quot;</bucket>
              <bucket>&quot;Chairs&quot;</bucket>
              <bucket>&quot;Storage&quot;</bucket>
              <bucket>&quot;Tables&quot;</bucket>
              <bucket>&quot;Binders&quot;</bucket>
              <bucket>&quot;Machines&quot;</bucket>
              <bucket>&quot;Accessories&quot;</bucket>
              <bucket>&quot;Copiers&quot;</bucket>
              <bucket>&quot;Bookcases&quot;</bucket>
              <bucket>&quot;Appliances&quot;</bucket>
              <bucket>&quot;Furnishings&quot;</bucket>
              <bucket>&quot;Paper&quot;</bucket>
              <bucket>&quot;Supplies&quot;</bucket>
              <bucket>&quot;Art&quot;</bucket>
              <bucket>&quot;Envelopes&quot;</bucket>
              <bucket>&quot;Labels&quot;</bucket>
              <bucket>&quot;Fasteners&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:Calculation_1544453204264280064:qk:2]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[:Measure Names]' />
              <lod column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:Calculation_1544453204266442754:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:Calculation_1544453204264280064:qk:2]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='none' scope='per-table' value='0.80000000000000004' value-column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:Calculation_1544453204264280064:qk:2]' z-order='1' />
          </pane>
          <pane id='3' y-axis-name='[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[:Measure Names]' />
              <lod column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:Calculation_1544453204266442754:qk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:Calculation_1544453204264280064:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[:Measure Names]' />
              <lod column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:Calculation_1544453204266442754:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Sales:qk] + [federated.0go4wrl03un6fz1df3aqv1kd023m].[usr:Calculation_1544453204264280064:qk:2])</rows>
        <cols>[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Sub-Category:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='瀑布图'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0go4wrl03un6fz1df3aqv1kd023m' />
          </datasources>
          <datasource-dependencies datasource='federated.0go4wrl03un6fz1df3aqv1kd023m'>
            <column caption='negProfit' datatype='real' name='[Calculation_1539386653628313604]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Profit]' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[cum:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Calculation_1539386653628313604]' derivation='Sum' name='[sum:Calculation_1539386653628313604:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Profit:qk]' max='1.0' min='-1.0' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c8d5dc</color>
                <color>#b7d2df</color>
                <color>#a5cee3</color>
                <color>#92cae6</color>
                <color>#7fc6ea</color>
                <color>#6cc2ed</color>
                <color>#57bef1</color>
                <color>#42b9f4</color>
                <color>#2db4f8</color>
                <color>#16affb</color>
                <color>#00aaff</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Profit:qk]' />
              <size column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Calculation_1539386653628313604:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0go4wrl03un6fz1df3aqv1kd023m].[cum:sum:Profit:qk]</rows>
        <cols>[federated.0go4wrl03un6fz1df3aqv1kd023m].[tmn:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='甜甜圈图'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0go4wrl03un6fz1df3aqv1kd023m' />
          </datasources>
          <datasource-dependencies datasource='federated.0go4wrl03un6fz1df3aqv1kd023m'>
            <column caption='number of records' datatype='integer' name='[Calculation_1539386653625344003]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Order ID])' />
            </column>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1539386653625344003]' derivation='User' name='[rank:usr:Calculation_1539386653625344003:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='1' field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[rank:usr:Calculation_1539386653625344003:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='1' field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[rank:usr:Calculation_1539386653625344003:qk]' scope='rows' value='true' />
            <encoding attr='space' class='1' field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[rank:usr:Calculation_1539386653625344003:qk]' field-type='quantitative' fold='true' major-show='false' minor-show='false' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[rank:usr:Calculation_1539386653625344003:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[rank:usr:Calculation_1539386653625344003:qk]' field-type='quantitative' major-show='false' minor-show='false' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[rank:usr:Calculation_1539386653625344003:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[rank:usr:Calculation_1539386653625344003:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.0go4wrl03un6fz1df3aqv1kd023m].[rank:usr:Calculation_1539386653625344003:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='288' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.0go4wrl03un6fz1df3aqv1kd023m].[rank:usr:Calculation_1539386653625344003:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Segment:nk]' />
              <size column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Profit:qk]' />
              <wedge-size column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Profit:qk]' />
              <text column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Segment:nk]' />
              <text column='[federated.0go4wrl03un6fz1df3aqv1kd023m].[pcto:sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.0go4wrl03un6fz1df3aqv1kd023m].[rank:usr:Calculation_1539386653625344003:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.49375692009925842' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0go4wrl03un6fz1df3aqv1kd023m].[rank:usr:Calculation_1539386653625344003:qk] + [federated.0go4wrl03un6fz1df3aqv1kd023m].[rank:usr:Calculation_1539386653625344003:qk])</rows>
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='仪表板 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='50000' id='1' name='工作表 2' w='99600' x='0' y='0' />
              <zone h='50000' id='7' name='凹凸图' w='99600' x='0' y='50000' />
            </zone>
          </zone>
        </zone>
        <zone h='9875' id='6' name='工作表 2' pane-specification-id='0' param='[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Segment:nk]' type='color' w='14000' x='85200' y='50625' />
      </zones>
    </dashboard>
    <dashboard name='仪表板 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='100000' id='1' name='瀑布图' w='99600' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='9500' id='6' name='瀑布图' pane-specification-id='0' param='[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Profit:qk]' type='color' w='14000' x='84800' y='81125' />
      </zones>
    </dashboard>
    <dashboard name='故事 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4668' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4668' />
            <zone h='83610' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15975'>
              <flipboard active-id='5' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='1' captured-sheet='动态图' id='2'>
                    <capturedDeltas>
                      <worksheet name='动态图'>
                        <current-page>
                          <multibucket>
                            <bucket>#2013-01-01 00:00:00#</bucket>
                          </multibucket>
                        </current-page>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='2' captured-sheet='仪表板 1' id='1'>
                    <capturedDeltas>
                      <worksheet name='凹凸图'>
                        <selection-collection />
                      </worksheet>
                      <worksheet name='工作表 2'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='3' captured-sheet='甜甜圈图' id='4' />
                  <story-point caption='4' captured-sheet='仪表板 2' id='5' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='动态图'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='1' param='[federated.0go4wrl03un6fz1df3aqv1kd023m].[:Measure Names]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2016-06-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0go4wrl03un6fz1df3aqv1kd023m].[:Measure Names]</field>
            <field>[federated.0go4wrl03un6fz1df3aqv1kd023m].[yr:Order Date:ok]</field>
            <field>[federated.0go4wrl03un6fz1df3aqv1kd023m].[yr:Order Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='工作表 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Region:nk]</field>
            <field>[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Segment:nk]</field>
            <field>[federated.0go4wrl03un6fz1df3aqv1kd023m].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='凹凸图'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0go4wrl03un6fz1df3aqv1kd023m].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='仪表板 1'>
      <viewpoints>
        <viewpoint name='凹凸图'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.0go4wrl03un6fz1df3aqv1kd023m].[tmn:Order Date:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='工作表 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Segment:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='故事 1'>
      <viewpoints />
      <active id='5' />
    </window>
    <window class='worksheet' name='甜甜圈图'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Segment:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Profit:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='瀑布图'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0go4wrl03un6fz1df3aqv1kd023m].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0go4wrl03un6fz1df3aqv1kd023m].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='仪表板 2'>
      <viewpoints>
        <viewpoint name='瀑布图'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='工作表 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0go4wrl03un6fz1df3aqv1kd023m].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0go4wrl03un6fz1df3aqv1kd023m].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cluster without R'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0xqhu1q0k96r5e12irs8k1ldixiw].[none:Class:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xqhu1q0k96r5e12irs8k1ldixiw].[none:Class:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Cluster with R'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0xqhu1q0k96r5e12irs8k1ldixiw].[usr:Calculation_1414974715677425665:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cluster with R' width='192'>
      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
      aD4xWND2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cluster without R' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='仪表板 1' width='192'>
      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
      EwStFsd734P7E/+LwtgYkQd/gGCwkRvLYXr99YsGFp5B17KKGiXLs5NmthhnYOS58jlVlsl3
      /hLthrlb5AgaDe4//iOsd91F5LvfJ/yd7yJHoxRDIcLf+S7RB3+A7Z3vw/yer5E8YaMwvXi4
      e663F11zE5Lt/MtTl4rllluo+8Lnkex2gv/0zzR2t4P6KikWi0tOe7hnQr3/2/vUdDZfPpY6
      clT9p//1JfXwNz42bx7/l/5BlVOpOceVXEpN/vD9ajE4WPqtyGrqkY+oxUD/eeWQUyk1/N3v
      qdOf+7xajETmnA9969tqpuvkomUEv/JVNTcypKYe+ei857OHvqnmex+vOJbp6VWnP/u/1fg3
      7lFzY2Oq7zOfVXPDw2X5sy/8q5o98E8L1qkUc/Mej/74ETX84A/mHI89+pjq/6d/Vqc/+79V
      OZlctD2zCT343+rvfPZh1e+fUZM/fL+qZBOqqqpq6uBzaupnf7KkMjLd3erMF76oTn/+b9X0
      8eMV5/I+n+r7zGdVOZNZMP/M/3lALQQCS5b5QhjvHVIvaw+wyTfA2xo0/M1395cXf6TDUXxm
      2L5927x5NLW1FMbnfpZI0JkwvvVLZJ/6DGouSaH9B0jN1yG55wZrnUFVFBKPP4H/gb9Hv2UL
      NR/+EMF/+Tfk6FknVjEUouDzYdiyedG2mG6+idQLL4MgohbnrgqTpzrKDjU5FiP4la+S3LsX
      9yf+FO3mWxHx4fnkJ4h87z/JHv4xmUc/DpIW/c2fWLBOQZprvoz97OfI0Sg1v/v+Oeds9/wW
      5htvwLh7N6J5aVGTAFpnDX//OzvxeLzorv0f5E6HVuQOP4x2w5uXVIZh0ya8n/4raj9zP8bt
      2yvLr6vDfu/bCX3jm/PmzQ0MINnsc8JjLjZNG9qWNgdYDHUZcwDJWYPmoQfZfM8b+PJjHWxu
      9XBwOEJb7FdsvPvjCPq53Z1ktxP5/vfRb9yIZK08LxhsqFhI/eTPyJ98kSI3l3aqs9tL26vI
      MnIkQn50lGxnJ5Hv/xe6piacH/4QuuZmJIcdXVsb4W98E+POkqkt9uNHMN92K9ra2jmyzEZb
      W0vskUcwbl+FIGoQ7U1nr0kxR7H7MXTbfwcllyPwpX/Afu+92N76FkSDAUFvJX/w6ygzr6Bz
      +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
    </thumbnail>
    <thumbnail height='192' name='仪表板 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAARZ0lEQVR4nO3dW28b6X3H8e8cyBmezzpQlk2vd73dzTpdZPdiD2lXBdoAKVAgQNHLFkZv
      exOgtwW6Rd5HEaB3yU1fQIB4A+SiKQo4SHxcHyRL1pGiKA7JIWc4M73Q2rJEOSZlUhI5/8+N
      RYLSPKL50zzPPP95HiUIggAhQko97wYIcZ4kACLUJAAi1IYOgAwZxDTRX3xhWzss37/Pg2aM
      QnuXGz/+EVG7Sde2+O3v7vLl5z+gVrdw9veIpRS+Xfe4upCjWqvx2aefnOfvIMSpvTwD3Hu0
      SjKTxq5vsdds0KpbxOJJHvzxDulkjLbrkC/OEAQQxIukqROJpdF17TzbL8RbeRmA9xbyWFqR
      nN4lMXeJwG5Sr27yvOaQiGgUoh0eV7vge1j1PVp2j+XlJ/jSIxIT7GUAfve/d1DcHVqNKk9X
      N9moWSQyBS7NFQB4+nQFM6qDolCcmSWTjlOeK+P7/rk1Xoi3pbyYCKvXaqQyGVYeP6B06Rpm
      zCCiHLxoa32DwvwcuqJQ3domOzvzcvCwvb3NzMzMOTVfiLejyEywCDOZBxChNrIAyIlETCL9
      zS8B8Fl5+pS5xQo7m5uU54psVPcp5rL4vodhGHieh6Io422tECM22Bgg8Fh+8hjbsslfKvJ0
      uUE5b9LudYhEU1yrXMLzPDRN5gTEZBmsC+T16DgungLrz7dIJXR26hapVJbA7SCdHzGpRnYV
      SM4AYhLJVSARahIAEWoSABFqEgARahIAEWoSABFqA80Ed9sWT1fWKM6U2N2zKKQMbE8jm0rg
      ug75fH7c7RRiLAYKQDSWJJMw2G9YWM0mCVOHwOPbP9zj8o0v8H0f3/elHkhMnIEC0Nh5zk7T
      IZuIEdU0fM/F8XWuXP+QTqOGmpojCAKZCBMTR2aCRajJIFiEmgRAhJoEQISaBECEmgRAhJoE
      QISaBECEmgRAhNrAtUAP7t7FyM+hqSqq08T2dTKmghdJcWVhdtztFGIsBlsWJQgoLF7D2d9h
      q9aiOFckHgTsVreYrZSkFkhMrIECEADN+i6LV66iJ/YopGN0fJ1yuYzneaiqKrVAYiJJLZAI
      NRkEi1CTAIhQkwCIUJMAiFCTAIhQkwCIUJMAiFAbalmUq9c/YGN1mWQsKsuiiKkw1LIou9vr
      NO3ewebYsiyKmAJDLYtSyBi0G3WSZp4esiyKmHxSCiFCTQbBItQkACLUJAAi1CQAItQkACLU
      JAAi1CQAItQGCkDg91hefobbtXn2fJO2Vae236TbdbBte9xtFGJsBpoJdrsupuKwa/s4nRY7
      bgc/CFitbTNX+QDDMKQUQkykgQJgW7usVC0KXRerq5EyHLp+hHwhT7vdRi2kpRRCTCQphRCh
      JoNgEWoSABFqEgARahIAEWoSABFqEgARahIAEWoSABFqgy+L8uQJsWyJ/UaTfELH9nTy6Rhd
      16c8LzvEiMmydOvg34Fmgv1el9XnO6CCToCngBLAzupjFj/6nEIygud5KIoy5mYLMbzf7yv8
      6x8OqxT+6bLP5ZgPDHgGaDYa2J0WpUKBmtUmF9fp+Drv3fgE122hqnmpBRIXluXBNzuHj5dK
      Kv/8zkHvf6AApPMl0vkSAIXi6BsoxHmRQbAItcF2iRRigvz0NtyuHz7+7y/g118dPq4kDr+W
      AIipc7t+tM+fjcLSzMmvlS6QCDUJgAg1CYAINQmACLXBVoXotNisNcnENDZ2LQopQ3aIEVNh
      oABEzAS60qBptbGaTRKmLjvEiAsrCDTgsCyn1+u99rUDF8Otr69TKBSIahq+5+L4skOMuJiO
      l6Tp+us/5gMFwIin+OSTT96qUUJcRDIRJibe13cOv64k4GYFlkqDfe+J5dBBEAxd2iwLY4nz
      ovzy8OuvSnBrafDv7TsD1HY2uHP/EdlslivX3icdj46giUJcTH1nAKfbpd3tEHg+uVxu4B8k
      ZwBxFr6+A/9x9/Dxr796fZ3PIPonwhQFu7GP1e4gFzXFtOsLQMe28bpdmrZFbc86jzYJcWb6
      AqAEPbqWTdsPcLqd82iTEGembxCcyhYwv5ciu7dPZmbAa0lCTKgT5wHWVp6AGkFPZsjEo7id
      Fo+ebZKL6zR7KqrTxPZ1MqaCF0lxZUGWRRGTqS8Ae9UtOq5PPpck8t0UcsRMkE3Fsa061VqL
      4lyReBCwW91itlKSWiBxZnxf5dWeu+d79Hqn/9z1BUDTo+yvrbC9vcP1T7PEowbdtkWj0eDS
      YgU9UaeQjtHxdcrlMp7noaqq1AKJM6EeG7VqqsafKPV5o75vTWdzfPY3Pz7ynBFP8f777wOQ
      iMcAiJ/+mEJcGCeUQrj84r9+QTyV469/8reYA/4gmQgT47B06+gN7sE/jPbnn3DyCKhUKnQC
      Dfk4i2nXNw9QW13l7soKyDywCIG+AOQXr/HFxx/SbrYkAmLqnXhTvKIoxNMp6QKJqXfiBSTP
      sQkUHR8kBOLM3NqGv/rm8PG/fzhcbf9p9AWgVX3Oys4+H/3gh0TGe2wRcsOs4TkufQGw9ixU
      U+V/vvktf/f3PyLCwbIozzZrXLsyz+3f36eYi8sOMeKtDbOG57j0BaB49V2+XLhMPH441RUx
      E8SNBo/u3WG3bpHNZzAjsPLwDosffS6lEOJUhlm+ZFz6JsJqtRpdu4XqOSj5RWaSUbpti4eP
      l7l2/QMcu0mv26bj62SSMVzXJZ/Py0SYeKO3uXd3XPoHwZ7DTnWXWDzBQuTgIpERT3Hjxg0A
      4kYWyJ5lG4UYm74A5EtzRE0TLRLF73lgyMopYni3tuHWK/37m5WDqzovnMUAdxB9n+5etcqG
      28He2ycRTXDt3co5NEtMuls7R29eXyrB1987v/a8Tv8tkTGdXtul22xQmJ0/jzYJcWb6zgBK
      LM21xTjMFfAMWRNITLe+AKiqSjQahah8+MX0kxGuGImfL8Ny6/DxUgm4gIPe405cG/Q0ZB4g
      3MZ948q4DLVDTDausbbToJQ2ZYeYEDuPorVxGWqHmGQqj1G36bie7BATYp6v8GqdsO/79Hr+
      +TXoLQzUBeq2Lf547yHpVApP0UlEoevr5FImna7PwsKcdIGm2O36QeXmCz8pw8evFANUEhe3
      j/8mskOMeKO6c7R/v1Q6+6rNcZFtUkWoyVUg0ef4GvyTckXnNGQeQPTtsXX8Gv40kzOAuJB1
      +mdFxgAi1CQAItQkACLUZAwQMscntW5WoPLKUt/Z6NFJrmk3cC3Qo2ebZEyV9VqTXFw/uCle
      doiZOCdNat2snFtzzt3AtUDZVBzXcShkkqAoskPMhJqmOp5RGCgAL3aIWVi4hNWyyXx3BpAd
      YiaPdmzUp6oquh7eoeDAtUAvdohJJg+qnmSHGDENwht9IZAAiJCTWqApdxFWYL7IJABT7iKs
      wHyRSQCmTJgL205DxgAi1CQAItSG6gI19qps7FoUUoYsiyKmwlABaFoWVrNJwtRlWZQL4De7
      Kr+pHp7E/3HR49/eP/w/qMThHDZdmShDBUDTdaKahu+5OL7Olesf0mnUUFNzUgpxDn5TPb4E
      ucbPvn9+7ZlEQwVgtrzIbHlcTRHi7Mll0Alya/vw62z0YBLrq9LR58Rw5IaYCSLX+EdPzgAX
      1HLrYMnxF5ZKF3OPrUknAbiglltHB7h8eDH32Jp0EoAL4vgGE8d3VVwqHf8OMQoyBrggJnWD
      iUknpRAi1IbqAgWey7P1bUrZBB1fJ2FG8X2PWCw2rvZNLbmiczEMFYCnjx7iGRl2duv4QcBq
      bZu5ygcYhiGlEEM7fOuDIKDX886xLeE1VADiiSTPnm+RycXp+RHyhTztdhu1kJZSiD/h1vbB
      zukvHB/gVhIKui7XI86DDILPwPH19n/9ldyVdVHIIFiEmgRAhJoEQISajLyGVHeOLjNSSUDl
      29tQf+XJpaUzb5c4HRkED+mkXdK//pcl+Obwya//GMigd0LIGWAUbt488lf/+CZzUrl5cUkA
      RuHmzSMPl5C/+JNCBsEi1IY7AwQ9bv/+PsVcHNvTyadjdF2f8vz07hCz3DpapgxHb0OU7s1k
      GyoAj+7dYbdukc1nMCOw8vAOix99PtXLovznE5Wf3T88Uf7qLzx+9cOjv6csPTK5hgrAux/+
      OcVynV63TcfXee/GJ7huC1XNT20tkHqsk6ipGlK2Mz2G/q/MZrNAiLYRFFNNBsEi1CQAItSk
      N3vM0q3Drz/Owk/fO3pDepg2kQ4DCcAxr96YDt/V+silzqkV6lqg2/WDPbReuFk5WFH5hWxU
      /uJPu1CfAerO0b/4S6WDEIjwkEGwCLWhzgBWvcraToNS2pQdYsRUGCoAyVQGo27Tcb2p2CHG
      8xXgcNzi+z69nn9+DRJnbqhB8NryY5quQiIKXV8nlzLpdH0WFuYmYhAsyw+K44Y6A1yqXBtX
      O4Q4F1NzFahv8SmWqfzy54dPLC1xcKuKEIemZh5AFp8SpyGXQUWoTWwXSGp2xChMRABOWovn
      OKnZEadxqgC0rfqZ7g9wu96/Fo+spy9G4VQBOL4/wKgDcLt+8Ff/hWxUbkQX43Gqq0BPHt7D
      9iOkzYCeluLq4uATYSdt/7ncPrryguyGKM7Kqc4A71z/4NQHlO0/xUUyknmA43VAvu+jHltO
      IQgCFEV57eNBXnP88Vkd56RjjeLnnuY4pznuSc+N4/cZ13EGec1pPgtBEIzmKtDxAyuK0vfc
      OJzVcc7yWHKcsz3OWFp2UkM8p4PjjbZaVFVVOh17pD/zJJ7ToRcob37hCPQchxG/TSfqdp03
      v2gEgp4z8v/3k5z29xlZKQTA8qP7OK6L1fEpFWewOzazuQSP17ZZnCthd7skkknoVHHMCtX1
      h3z/xg3W15/jOj0WK1f6Etnar3Hn4TKFXIK2o5DXupiVD9h9dActUSAeU2nXW5TyJveet/j4
      oz9jZ3MVz4crlxffqu0zuQQPlze4emnuVG0/mcej+w+wOz28wKG48A7ddpOZjMm3z6qUZ3N0
      uy7JZJKt9RUK81cJ3DZxHJzcFYrmYEGsV7d4vLZNMhqgGGk6bYvv37jB/936hquffYq7vcGe
      l2ChmGBju8ZsPkm96ZCPqrjpDL5iDnyslScP6dg2TYeX752peXhajKShv3zvdrfWSRXmUQOX
      TCZCbS/KQjk90DG6bYsHd++ipAp4jsPluRjtXpG9zQfMX3kXt9uha1tkC7Osrj7n+rVFlte2
      ef+9Cmur6/gEXF7s/zyM9Ayg6QaL8yVK5QVQNNLJGCgKV69WUFQVr+dhGibFUhEFKBUPrm36
      vo+m6yc2xgcq71xFjxgkYxFKxSL4YCTSRHQNTfFRdINeoGP6+9TbLkEA+pB1SSe1PaLrGKZx
      6ra/jm4kmC3luFSeQTOSxI0Iq2vrdOw2qqrR83oYpoFpxqhWd+h5Prqm9/WL/6Tv3ncjkSai
      BpSKJVq1DSzHx+4GKL02uhlHj8ZJxQ0yuSJRXaHT8zD14Y6l6xEuzc8cee9ipkm1Wj3y3sVM
      k51qFc/z0HUddZjfJwgoLF4jbUbIJGPkSyU0wIyZ7FRraJqKh0YkolMqZDFiSdLJGIHXIVCM
      116hHOFMsI/rOjT9PLprkc2mWH2+SZBK0dqv8d47V4hGDZLJBJtrVRxcgu4+WzsR8oUS3dd1
      ZYKAveoelxaK2D2V7f0dcKr4ns/8wgxmBIyoTTplsN92yRkuzC/Qshpv3XZNy1EqlijNFE/X
      9hMP5eM6HfR8mbZlkTEarDfaXL/xMb1OB9M0iRoGyUQCO5WimMqjKRC4HVKRYQ7js7tbYyab
      QDXT7G4s04zM8uVffo5imuixd4h6MQLHotFooCgKTduhPFvCwEOPDH6wg/cuh+42X753MzMz
      LC7GKc0UXr53rp0iVUwR1SDo+aSzg88fBUCzvku5XKbd9dha36PraaRSaVKFeRJmhKhhkDA0
      1hoNUBQajQZmPMVCucB+4+TPw0i7QEJMGqkGFaH2/0p2C9Yk71oPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='凹凸图' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='动态图' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='工作表 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='工作表 6' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='故事 1' width='192'>
      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
      /7AbueW5APoAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='瀑布图' width='192'>
      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
      w3AAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='甜甜圈图' width='192'>
      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
      WMzLEnjUAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
